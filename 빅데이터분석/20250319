# 📘 R 기초 실습 정리 - 날짜, 변수, 벡터 등

## 📁 작업 디렉토리 및 로케일 설정

```r
setwd("c:/r_workdata")
Sys.setlocale("LC_ALL", "Korean")
```

## 🗓️ 날짜 계산 및 포맷 변환

```r
# 날짜 형식 변환 및 차이 계산
as.Date("2022-02-14") - as.Date("21.11.06", format="%y.%m.%d")

# POSIX 클래스 차이 비교
as.Date("2025-03-19 15:50:00") - as.Date("2025-03-19 13:10:00")
as.POSIXct("2025-03-19 15:50:00") - as.POSIXct("2025-03-19 13:10:00")
```

## 📦 lubridate 패키지 사용

```r
library(lubridate)

d <- now()
d
year(d)
month(d)
day(d)
wday(d)
wday(d, label=TRUE)

d2 <- d - days(2)
d2

d + days(100)
d + years(1)

# 현재 날짜 + 1년 2개월 3일 4시간 5분 6초
now() + years(1) + months(2) + days(3) + hours(4) + minutes(5) + seconds(6)

hm("22:30")
hms("22:30:15")
```

## 📅 날짜 시퀀스 생성

```r
seq(as.Date("2025-01-01"), as.Date("2025-12-31"), 'day')
seq(as.Date("2025-01-01"), as.Date("2025-12-31"), 'month')
seq(as.Date("2025-01-01"), as.Date("2125-12-31"), 'year')

d <- seq(as.Date("2025-01-01"), as.Date("2125-12-31"), 'year')
d[45]
d[35:45]
d[c(35, 45)]
d[c(35, 45)] + years(1)
```

## 🧮 변수와 자료형

```r
v1 <- 'aa'
class(v1)

v1 <- now()
class(v1)

v1 <- Sys.Date()
class(v1)

v1 <- c('a', 'b', 'c')
class(v1)
str(v1)

v1 <- 2
v2 <- v3 <- v4 <- 1
v2

v2 = v3 = v4 = 2
v3

10 -> v5 -> v6 -> v7
v6
v7
```

## 🔤 문자열과 타입

```r
s1 <- "very easy R"
s1

c1 <- c(1, 2, 3)
class(c1)

c1 <- c(1, 2, 3, 4, '5')
class(c1)

# 한글 변수명 사용 (가능하지만 권장되지 않음)
변수 <- 1
변수
```

## ➕ 산술 및 문자 연산

```r
n1 <- 1
n2 <- 2
n1 + n2

s1 <- 1:5
s2 <- 'a':'f'

n3 <- '3'
n1 + as.numeric(n3)
```

## 🧹 환경 정리

```r
objects()
objects(all.names = TRUE)
rm(s1)
objects()
rm(list = ls())
objects()
```

## 🧾 데이터 객체 개요

- 스칼라: 단일 값
- 벡터: 1차원 동일 타입
- matrix: 2차원 배열
- array: 3차원 이상 배열
- list: 서로 다른 타입 허용
- dataframe: 표 형태

## 📌 벡터 기초

```r
v1 <- c(1, 2, 3, 4, 5)
v1[1]
v1[0]
v1[-3]
v1[3]
length(v1)

# length() 활용 문제
v1[1:(length(v1)-2)]

v1[2:4]
v1[2] <- 6
v1 <- c(v1, 7)
v1[9] <- 9

append(v1, 10, after=3)
v1 <- append(v1, c(10,11), after=3)
v1 <- append(v1, 12, after=0)
```

## ➕ 벡터 연산

```r
v1 <- c(1,2,3)
v2 <- c(3,4,5)
v1 + v2

v3 <- c(3,4,'5')  # 형 변환 주의
# v1 + v3  # 에러

union(v1, v3)
v4 <- c(1,2,3,4)
v1 + v4  # 순환 규칙

setdiff(v1, v2)  # 차집합
intersect(v1, v2)  # 교집합
```

## 🏷️ 벡터 이름 지정

```r
f <- c(10,20,30)
names(f) <- c('apple', 'banana', 'peach')
f
```

## 🔁 벡터 반복/시퀀스

```r
v4 <- c(1:5)
v5 <- seq(1,5)
v6 <- seq(-2,2)
c6 <- c(-2:2)
v7 <- seq(1, 10, 2)

v8 <- rep(1:3, 2)
v9 <- rep(1:3, each=2)
```

## 📏 벡터 길이 및 포함 여부

```r
length(v1)
NROW(v1)

3 %in% v7
```
